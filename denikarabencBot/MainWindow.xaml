<Window x:Class="denikarabencBot.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:denikarabencBot.Views"
        xmlns:converters="clr-namespace:denikarabencBot.Converters"
        mc:Ignorable="d"
        Closed="Window_Closed"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <!-- Pulse -->
        <Storyboard x:Key="Pulse" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="PulseBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.85"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="PulseBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.85"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
    </Window.Resources>
    <!--<Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource Pulse}"/>
        </EventTrigger>
    </Window.Triggers>-->
    <Grid>
        <Grid.Resources>
            <Style x:Key="PulseStyleTextBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="35"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Text" Value="You have new reminder!"/>
            </Style>
            <Style x:Key="PulseStyleRectangle" TargetType="{x:Type Rectangle}">
                <Setter Property="Height" Value="50"/>
                <Setter Property="Width" Value="150"/>
            </Style>
        </Grid.Resources>
        <TabControl>
            <TabItem DataContext="{Binding}" Header="General">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Header="Settings" IsEnabled="{Binding JoinButtonEnabled}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0" Grid.Row="0" Margin="2" HorizontalAlignment="Right" Content="Use auto game changer: "/>
                            <CheckBox Grid.Column="1" Margin="2" Grid.Row="0" VerticalAlignment="Center" IsChecked="{Binding IsAutoGameChanegeEnabled}"/>
                            <Label Grid.Column="0" Grid.Row="1" Margin="2" HorizontalAlignment="Right" Content="Use replay: "/>
                            <CheckBox Grid.Column="1" Margin="2" Grid.Row="1" VerticalAlignment="Center" IsChecked="{Binding IsReplayEnabled}"/>
                            <Label Grid.Column="0" Grid.Row="2" Margin="2" HorizontalAlignment="Right" Content="Replay folder path: " ToolTip="Copy path from OBS where replay is going to be saved"/>
                            <TextBox Grid.Column="1" Margin="2" Grid.Row="2" Text="{Binding ReplayPath}"/>
                            <Label Grid.Column="0" Grid.Row="3" Margin="2" Content="Insert your Twitch.tv channel name where bot should join" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="1" Grid.Row="3" Margin="2" Text="{Binding Path=TwitchChannelName}"/>
                            <Label Grid.Column="0" Grid.Row="4"  Content="Insert your Steam ID" HorizontalAlignment="Right" ToolTip="SteamID is not your Steam name, but a number. You can find it here: steamidfinder.com"/>
                            <TextBox Grid.Column="1" Grid.Row="4" Margin="2" Text="{Binding Path=SteamID}" IsEnabled="{Binding IsAutoGameChanegeEnabled}"/>
                        </Grid>
                    </GroupBox>

                    <Button Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center" Content="Join" Command="{Binding JoinBotCommand}" MinWidth="80"/>
                    <Button x:Name="removeBot" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Center" Content="Remove Bot form channel" Visibility="{Binding RemoveBotButtonVisibility}" Command="{Binding RemoveBotCommand}" MinWidth="80"/>

                    <Button Grid.Column="0" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Open Reminders" Command="{Binding OpenReminderListCommand}"/>

                    <Border Grid.Column="1" Grid.Row="3" x:Name="PulseBox" Visibility="{Binding HasNewReminder, Converter={StaticResource boolToVisibilityConverter}}"
                        Background="Red" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>

                        <TextBlock Style="{StaticResource PulseStyleTextBlock}"/>

                    </Border>

                    <Button Grid.Column="0" Grid.Row="5" Content="log process" HorizontalAlignment="Left" MinWidth="80" Click="ProcessLog_Click"/>
                    <Button Grid.Column="1" Grid.Row="5" Content="Exit" HorizontalAlignment="Right" MinWidth="80" Click="ExitBtn_Click"/>
                </Grid>
            </TabItem>
            <TabItem DataContext="{Binding}" Header="Commands">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right"  Content="Command: " Margin="2"/>
                    <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Command, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                    <Label Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" Content="Message: " ToolTip="What will bot write when command is typed in chat. Type {0} to write name of the user who typed message, type {1} to get what he typed. For instance '{0} has written {1}' " Margin="2"/>
                    <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Message, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                    <Label Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" Content="Permission: " ToolTip="Permission needed to activate command. King is broadcaster" Margin="2"/>
                    <ComboBox  Grid.Column="1" Grid.Row="2" ItemsSource="{Binding PermissionSource}" SelectedItem="{Binding Permission}" Margin="2"/>
                    <Label Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right" Content="Is command timed: " ToolTip="If checked, command will be showed in chat every 40 minutes" Margin="2"/>
                    <CheckBox  Grid.Column="1" Grid.Row="3" IsChecked="{Binding IsTimed}" Margin="2" VerticalAlignment="Center"/>
                    <Button Grid.Column="1" Grid.Row="4" Content="Add Command" HorizontalAlignment="Right" MinWidth="80" Command="{Binding AddCommandCommand}" Margin="2" Visibility="{Binding CanAddCommand}" />
                    <local:CommandsDataGridUserControl Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="2"/>
                </Grid>

            </TabItem>

            <TabItem DataContext="{Binding}" Header="Votes">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <local:VotesDataGridUserControl Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"/>
                    <Grid Grid.Row="2" Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" Content="Last vote reset time: " Margin="2"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Grid.ColumnSpan="2" Text="{Binding Path=LastVoteResetTime, StringFormat='{}{0:dd/MMM/yyyy HH:mm}'}" Margin="2"/>
                        <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" Content="Default voting category: " Margin="2"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=DefaultVotingCategory, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                        <Button Grid.Row="1" Grid.Column="2" Margin="2" Content="Set category" Command="{Binding SetDefaultVotingCategoryCommand}"/>
                    </Grid>
                    <Button Grid.Row="3" Margin="2" Content="Clear all votes" Command="{Binding ClearVotesCommand}"/>
                    <Button Grid.Row="4" Margin="2" Content="Open report" Command="{Binding OpenVoteReportCommand}"/>
                </Grid>

            </TabItem>

            <!--<TabItem DataContext="{Binding YoutubeViewModel}" Header="Youtube">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>

                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left"  Content="Youtube List: " Margin="2"/>
                    <DataGrid Grid.Column="0" Grid.Row="1" AlternatingRowBackground="WhiteSmoke" AlternationCount="2" ItemsSource="{Binding YoutubeSongs}" SelectedItem="{Binding SelectedSong}" AutoGenerateColumns="false">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="User requested" Width="Auto" Binding="{Binding UserRequested}"/>
                            <DataGridHyperlinkColumn Header="Song name" Width="*" ContentBinding="{Binding SongName}" Binding="{Binding Link}">
                                <DataGridHyperlinkColumn.ElementStyle>
                                    <Style>
                                        <EventSetter Event="Hyperlink.Click" Handler="DG_Hyperlink_Click"/>
                                    </Style>
                                </DataGridHyperlinkColumn.ElementStyle>
                            </DataGridHyperlinkColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Grid.Row="2">
                        <Button Content="Remove" Click="YoutubeButtonRemove"/>
                    </StackPanel>
                    --><!--<cefSharp:ChromiumWebBrowser Grid.Row="3" Name="Test" />--><!--
                    <WebBrowser Name="Test" Grid.Row="3"/>
                </Grid>
            </TabItem>-->
        </TabControl>
    </Grid>
</Window>
